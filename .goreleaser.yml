# This is an example goreleaser.yaml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod download

    # We strongly recommend running tests to catch any regression before release. 
    # Even though, this an optional step.
    - go test ./...
    
    # We hope plugins are always compatible with the latest version of Packer.
    # If you need a release compatible with a previous version, please update the "latest" tag with that version 
    # to properly check the compatibility.
    - go get github.com/hashicorp/packer@latest 

    # You may remove this if you generate these on your own
    - go install github.com/hashicorp/packer/cmd/mapstructure-to-hcl2
    - go install github.com/hashicorp/packer/cmd/struct-markdown
    - go generate ./...

builds:
  - env:
      - CGO_ENABLED=0
    mod_timestamp: '{{ .CommitTimestamp }}'
    hooks:
      post:
      # RUN HERE COMPATIBILITY CHECK CMD
       - upx "{{ .Path }}"
       - codesign -project="{{ .ProjectName }}" "{{ .Path }}"
    flags:
      - -trimpath #removes all file system paths from the compiled executable
    ldflags:
      - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}'  ## can be useful to set variables 
    goos:
      - freebsd
      - windows
      - linux
      - darwin
    goarch:
      - amd64
      - '386'
      - arm
      - arm64
    ignore:
      - goos: darwin
        goarch: '386'
    binary: '{{ .ProjectName }}-{{ .Version }}'
archives:
- format: zip
  name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
  algorithm: sha256
signs:
  - artifacts: checksum
    args:
      # if you are using this is in a GitHub action or some other automated pipeline, you 
      # need to pass the batch flag to indicate its not interactive.
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}"
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"
release:
  # If you want to manually examine the release before its live, uncomment this line:
  # draft: true
changelog:
  skip: true
